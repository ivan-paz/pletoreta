#include <Audio.h>
#include <Wire.h>
#include <SPI.h>
#include <SD.h>
#include <SerialFlash.h>


//Audio declarations

AudioSynthWaveform       waveform2;      //xy=178.88333129882812,288.8833312988281
AudioSynthWaveform       waveform1;      //xy=181.88333129882812,198.88333129882812
AudioOutputI2S           i2s2;           //xy=428.8833312988281,199.00003051757812
AudioConnection          patchCord1(waveform2, 0, i2s2, 1);
AudioConnection          patchCord2(waveform1, 0, i2s2, 0);
AudioControlSGTL5000     sgtl5000_1;     //xy=177.88333129882812,112




//SD CARD PINS
#define SDCARD_CS_PIN    10
#define SDCARD_MOSI_PIN  11
#define SDCARD_SCK_PIN   13

int PotPort1 = A0; // select the input pins for the potentiometers
int PotPort2 = A1;
int PotPort3 = A2;
int PotPort4 = A3;

int Boton1 = 2;    // pushbutton connected to digital pinS
int Boton2 = 5; 
int Boton3 = 25; 
int Boton4 = 27; 
int Gate1 = 3; 
int Gate2 = 6; 
int Encoderbut = 4;

 // Variables to store port values 
float PotValue1 = 0; 
float PotValue2 = 0;
float PotValue3 = 0;
float PotValue4 = 0;
int BotonValue1 = 0;   
int BotonValue2 = 0;
int BotonValue3 = 0;
int BotonValue4 = 0;
int GateValue1 = 0;
int GateValue2 = 0;
int EncoderbutValue = 0;

int16_t i;
int16_t v_temp[256];


// Wave table variables
/*
 const int16_t wave_array[256] = {   //////////this will start us off with a sinewave
     0,   804,  1608,  2410,  3212,  4011,  4808,  5602,  6393,  7179,
  7962,  8739,  9512, 10278, 11039, 11793, 12539, 13279, 14010, 14732,
 15446, 16151, 16846, 17530, 18204, 18868, 19519, 20159, 20787, 21403,
 22005, 22594, 23170, 23731, 24279, 24811, 25329, 25832, 26319, 26790,
 27245, 27683, 28105, 28510, 28898, 29268, 29621, 29956, 30273, 30571,
 30852, 31113, 31356, 31580, 31785, 31971, 32137, 32285, 32412, 32521,
 32609, 32678, 32728, 32757, 32767, 32757, 32728, 32678, 32609, 32521,
 32412, 32285, 32137, 31971, 31785, 31580, 31356, 31113, 30852, 30571,
 30273, 29956, 29621, 29268, 28898, 28510, 28105, 27683, 27245, 26790,
 26319, 25832, 25329, 24811, 24279, 23731, 23170, 22594, 22005, 21403,
 20787, 20159, 19519, 18868, 18204, 17530, 16846, 16151, 15446, 14732,
 14010, 13279, 12539, 11793, 11039, 10278,  9512,  8739,  7962,  7179,
  6393,  5602,  4808,  4011,  3212,  2410,  1608,   804,     0,  -804,
 -1608, -2410, -3212, -4011, -4808, -5602, -6393, -7179, -7962, -8739,
 -9512,-10278,-11039,-11793,-12539,-13279,-14010,-14732,-15446,-16151,
-16846,-17530,-18204,-18868,-19519,-20159,-20787,-21403,-22005,-22594,
-23170,-23731,-24279,-24811,-25329,-25832,-26319,-26790,-27245,-27683,
-28105,-28510,-28898,-29268,-29621,-29956,-30273,-30571,-30852,-31113,
-31356,-31580,-31785,-31971,-32137,-32285,-32412,-32521,-32609,-32678,
-32728,-32757,-32767,-32757,-32728,-32678,-32609,-32521,-32412,-32285,
-32137,-31971,-31785,-31580,-31356,-31113,-30852,-30571,-30273,-29956,
-29621,-29268,-28898,-28510,-28105,-27683,-27245,-26790,-26319,-25832,
-25329,-24811,-24279,-23731,-23170,-22594,-22005,-21403,-20787,-20159,
-19519,-18868,-18204,-17530,-16846,-16151,-15446,-14732,-14010,-13279,
-12539,-11793,-11039,-10278, -9512, -8739, -7962, -7179, -6393, -5602,
 -4808, -4011, -3212, -2410, -1608,  -804};

 const int16_t wave_array[256] = {11000, 14000, 17000, 17000, 14000, 13000, 
 13000, 12000, 12000, 11000, 11000, 10000, 10000, 10000, 10000, 10000, 10000, 
 10000, 10000, 9000, 9000, 9000, 9000, 9000, 9000, 9000, 8000, 8000, 8000, 8000, 
 8000, 7000, 7000, 7000, 7000, 7000, 7000, 7000, 7000, 7000, 7000, 7000, 7000, 7000, 
 7000, 7000, 8000, 8000, 9000, 10000, 12000, 13000, 14000, 14000, 15000, 16000, 
 17000, 18000, 19000, 19000, 20000, 20000, 21000, 21000, 22000, 22000, 23000, 23000, 
 24000, 25000, 25000, 25000, 26000, 26000, 27000, 27000, 27000, 27000, 27000, 27000,
 27000, 27000, 26000, 26000, 26000, 25000, 25000, 24000, 23000, 23000, 22000, 22000,
 21000, 21000, 21000, 21000, 21000, 21000, 21000, 21000, 21000, 21000, 21000, 21000, 
 21000, 21000, 21000, 22000, 22000, 22000, 23000, 23000, 23000, 24000, 24000, 23000, 
 23000, 23000, 22000, 22000, 21000, 20000, 19000, 18000, 18000, 17000, 16000, 15000, 
 14000, 14000, 13000, 13000, 12000, 12000, 12000, 12000, 13000, 14000, 15000, 16000, 
 17000, 18000, 20000, 21000, 22000, 22000, 23000, 24000, 24000, 25000, 25000, 25000,
 25000, 25000, 25000, 24000, 24000, 24000, 23000, 23000, 22000, 21000, 21000, 20000,
 20000, 19000, 18000, 18000, 17000, 17000, 16000, 16000, 16000, 16000, 16000, 16000, 
 17000, 17000, 18000, 18000, 19000, 20000, 20000, 20000, 21000, 21000, 21000, 22000, 
 22000, 22000, 22000, 22000, 23000, 23000, 23000, 23000, 23000, 22000, 22000, 22000, 
 21000, 21000, 20000, 20000, 19000, 19000, 18000, 18000, 17000, 17000, 17000, 17000,
 17000, 17000, 17000, 18000, 18000, 18000, 19000, 19000, 19000, 20000, 20000, 20000, 
 21000, 21000, 22000, 22000, 22000, 23000, 23000, 23000, 23000, 23000, 23000, 23000, 
 22000, 22000, 21000, 21000, 20000, 19000, 19000, 18000, 17000, 16000, 16000, 15000, 
 15000, 14000, 14000, 13000, 13000, 12000, 12000, 12000};
*/



int16_t v_array[256] = {-18317, -8507, 1624, 178, -8197, -10834, -13313, -15176, -16759,
-18391, -19843, -20636, -21158, -21500, -21931, -22365, -22595, -23013, -23157, -23561, 
-24020, -24257, -24493, -24024, -24306, -25886, -27201, -27584, -27809, -28338, -29520, 
-30722, -30687, -30393, -30365, -30991, -31921, -31583, -31030, -31681, -32604, -32768, 
-32058, -31497, -31423, -30648, -29462, -27731, -24909, -21081, -17061, -12863, -9943,
-7478, -4865, -2743, 155, 3490, 5805, 7619, 8992, 10630, 12605, 14289, 15797, 17085, 
18480, 20417, 22629, 24827, 26368, 27611, 28975, 30194, 31080, 31938, 32734, 32768, 
32552, 32262, 31765, 31129, 30441, 29581, 28465, 27029, 25131, 22949, 20704, 18594, 
16869, 15496, 14610, 14053, 13633, 13488, 13817, 14041, 14143, 14235, 14230, 14112, 
13952, 13960, 14052, 14439, 14605, 15402, 16406, 17082, 18377, 19622, 20716, 21403, 
21352, 20839, 19949, 18828, 17349, 15334, 13057, 10670, 8034, 5224, 2359, -440, -3058,
-5737, -8316, -10456, -12372, -13821, -15108, -15804, -15164, -14109, -12228, -9191, 
-5891, -2556, 1137, 4922, 8848, 12267, 15227, 17991, 20490, 22618, 23934, 25049, 25929,
26091, 26195, 25793, 24881, 24037, 22857, 21597, 20072, 18276, 16362, 14390, 12624, 10633,
8557, 6490, 4502, 2692, 757, -843, -2088, -2990, -3577, -3426, -3157, -2066, -236, 1379,
2952, 5261, 7204, 8641, 10164, 11715, 12906, 13858, 14666, 15467, 15675, 16015, 16934, 
17871, 18591, 18886, 18917, 18682, 18460, 17985, 16875, 15481, 14030, 12458, 10692, 
8978, 7345, 5756, 4194, 2792, 1666, 738, -56, -599, -209, 230, 1365, 2435, 3364, 4227, 
5452, 6594, 7544, 8595, 10007, 11472, 13101, 14400, 15432, 16682, 17964, 18954, 19566, 
20163, 20126, 19686, 19041, 18211, 17585, 16379, 14782, 12933, 10661, 8393, 6224, 3937, 
1264, -1255, -3376, -4913, -6327, -7932, -9668, -11171, -12639, -13968, -15141, -15843};



const int16_t myWaveform[256] = {
     0,  1895,  3748,  5545,  7278,  8934, 10506, 11984, 13362, 14634,
 15794, 16840, 17769, 18580, 19274, 19853, 20319, 20678, 20933, 21093,
 21163, 21153, 21072, 20927, 20731, 20492, 20221, 19929, 19625, 19320,
 19022, 18741, 18486, 18263, 18080, 17942, 17853, 17819, 17841, 17920,
 18058, 18254, 18507, 18813, 19170, 19573, 20017, 20497, 21006, 21538,
 22085, 22642, 23200, 23753, 24294, 24816, 25314, 25781, 26212, 26604,
 26953, 27256, 27511, 27718, 27876, 27986, 28049, 28068, 28047, 27989,
 27899, 27782, 27644, 27490, 27326, 27159, 26996, 26841, 26701, 26582,
 26487, 26423, 26392, 26397, 26441, 26525, 26649, 26812, 27012, 27248,
 27514, 27808, 28122, 28451, 28787, 29124, 29451, 29762, 30045, 30293,
 30495, 30643, 30727, 30738, 30667, 30509, 30254, 29897, 29433, 28858,
 28169, 27363, 26441, 25403, 24251, 22988, 21620, 20150, 18587, 16939,
 15214, 13423, 11577,  9686,  7763,  5820,  3870,  1926,     0, -1895,
 -3748, -5545, -7278, -8934,-10506,-11984,-13362,-14634,-15794,-16840,
-17769,-18580,-19274,-19853,-20319,-20678,-20933,-21093,-21163,-21153,
-21072,-20927,-20731,-20492,-20221,-19929,-19625,-19320,-19022,-18741,
-18486,-18263,-18080,-17942,-17853,-17819,-17841,-17920,-18058,-18254,
-18507,-18813,-19170,-19573,-20017,-20497,-21006,-21538,-22085,-22642,
-23200,-23753,-24294,-24816,-25314,-25781,-26212,-26604,-26953,-27256,
-27511,-27718,-27876,-27986,-28049,-28068,-28047,-27989,-27899,-27782,
-27644,-27490,-27326,-27159,-26996,-26841,-26701,-26582,-26487,-26423,
-26392,-26397,-26441,-26525,-26649,-26812,-27012,-27248,-27514,-27808,
-28122,-28451,-28787,-29124,-29451,-29762,-30045,-30293,-30495,-30643,
-30727,-30738,-30667,-30509,-30254,-29897,-29433,-28858,-28169,-27363,
-26441,-25403,-24251,-22988,-21620,-20150,-18587,-16939,-15214,-13423,
-11577, -9686, -7763, -5820, -3870, -1926
};

/*
const int16_t v_array[256] = {-6930, -3864, -697, -1149, -3767, -4591, -5366, -5949, -6443, -6954, -7407, -7655, -7818, -7925,
-8060, -8196, -8268, -8398, -8443, -8570, -8713, -8787, -8861, -8714, -8802, -9296, -9707, -9827, -9897, -10063, -10432, -10808,
-10797, -10705, -10696, -10892, -11183, -11077, -10904, -11107, -11396, -11447, -11225, -11050, -11027, -10785, -10414, -9873,
-8991, -7794, -6538, -5226, -4313, -3542, -2726, -2062, -1157, -114, 609, 1176, 1605, 2117, 2735, 3261, 3732, 4135, 4571, 5177,
5868, 6555, 7037, 7425, 7851, 8232, 8510, 8778, 9027, 9037, 8970, 8879, 8724, 8525, 8310, 8041, 7692, 7243, 6650, 5968, 5266,
4607, 4067, 3638, 3362, 3187, 3056, 3011, 3114, 3184, 3216, 3244, 3243, 3206, 3156, 3158, 3187, 3308, 3360, 3609, 3923, 4134,
4539, 4928, 5270, 5485, 5469, 5308, 5030, 4680, 4218, 3588, 2876, 2130, 1306, 428, -468, -1343, -2161, -2998, -3805, -4473,
-5072, -5525, -5927, -6145, -5945, -5615, -5027, -4078, -3047, -2004, -850, 333, 1560, 2629, 3554, 4418, 5199, 5864, 6276, 
6624, 6899, 6950, 6982, 6857, 6572, 6308, 5939, 5546, 5069, 4507, 3909, 3293, 2741, 2119, 1469, 824, 202, -364, -968, -1469,
-1858, -2140, -2323, -2276, -2192, -1851, -1279, -774, -282, 439, 1047, 1496, 1972, 2457, 2829, 3126, 3379, 3629, 3694, 3801,
4088, 4381, 4606, 4698, 4708, 4634, 4565, 4416, 4069, 3634, 3180, 2689, 2137, 1601, 1091, 594, 106, -332, -684, -974, -1223,
-1392, -1271, -1133, -778, -444, -154, 116, 499, 856, 1153, 1481, 1923, 2381, 2890, 3296, 3618, 4009, 4410, 4719, 4911, 5097,
5086, 4948, 4746, 4487, 4292, 3914, 3415, 2837, 2127, 1418, 740, 26, -810, -1598, -2260, -2741, -3183, -3685, -4227, -4697, -5156, -5571, -5938, -6157};

*/

const int16_t phi_array[256] =  {21774, 19862, 18714, 18866, 20243, 22013, 23116, 22653, 20199, 16525, 12576, 9537, 7807, 6905, 5880, 4660,
3171, 1439, -955, -4181, -8185, -12761, -17459, -22675, -27109, -29937, -29186, -24614, -17684, -10087, -3037, 2881, 7589, 11266, 13478, 14495, 
14799, 15159, 16237, 17808, 19900, 21983, 23846, 25332, 26534, 27513, 27641, 26970, 25918, 24854, 24266, 23999, 24042, 24078, 24074, 23971, 24016,
23942, 23519, 22552, 21385, 20854, 21250, 22561, 24401, 26413, 27859, 28682, 28860, 28986, 29100, 29066, 28814, 28193, 27532, 26991, 26752, 
26886, 27547, 27997, 27954, 27506, 27110, 27507, 28623, 30103, 31120, 31482, 31417, 31375, 31510, 31853, 32222, 32346, 32456, 32531, 32711, 
32768, 32757, 32413, 31867, 31032, 29984, 28857, 28199, 28269, 28932, 29793, 30462, 30745, 30523, 30140, 29554, 29131, 28691, 27895, 27293, 
26809, 26324, 26372, 26945, 27942, 28738, 29309, 29188, 28596, 27730, 27185, 27335, 27745, 28131, 27745, 26889, 25683, 24909, 25168, 26121, 
27371, 28165, 28224, 27440, 25749, 23339, 20749, 18648, 17044, 16761, 17597, 18826, 20033, 20794, 20987, 20396, 19241, 16881, 13450, 8898, 
4681, 1684, 757, 2307, 5432, 8922, 11261, 12330, 11510, 8246, 2477, -5625, -15091, -23973, -30166, -32768, -32026, -28788, -24747, -20523, 
-15793, -10958, -6914, -4215, -2986, -2546, -1338, 1118, 5002, 8983, 11975, 13569, 14036, 13910, 14319, 15947, 18731, 22356, 25790, 28129, 
28982, 28654, 27673, 26810, 26312, 26041, 25624, 24867, 23959, 23173, 23094, 23709, 24537, 25317, 25977, 26226, 26175, 25615, 24595, 23645,
23225, 23651, 24367, 24589, 23991, 22682, 21007, 20039, 20109, 21196, 22796, 24564, 26094, 27328, 28440, 29495, 30276, 30567, 30567, 30409,
30422, 30324, 30341, 30216, 29683, 29191, 28761, 28732, 29264, 30262, 31422, 32216, 32319, 31707, 30837, 30014, 29660, 29715, 30033};


void setup() {

//Audio setup
AudioMemory(8);
  sgtl5000_1.enable();
  sgtl5000_1.volume(0.5);
  sgtl5000_1.inputSelect(AUDIO_INPUT_LINEIN);
  sgtl5000_1.micGain(36);
  SPI.setMOSI(SDCARD_MOSI_PIN);
  SPI.setSCK(SDCARD_SCK_PIN);

  Serial.begin(9600); // open the serial port at 9600 bps:
  pinMode(Boton1, INPUT_PULLUP);    // sets the digital pin 2 as input
  pinMode(Boton2, INPUT_PULLUP); 
  pinMode(Boton3, INPUT_PULLUP); 
  pinMode(Boton4, INPUT_PULLUP); 
  pinMode(Gate1, INPUT_PULLUP); 
  pinMode(Gate2, INPUT_PULLUP); 
  pinMode(Encoderbut, INPUT_PULLUP); 



  pinMode(30, OUTPUT);    
  pinMode(32, OUTPUT); 
  pinMode(33, OUTPUT); 
  pinMode(28, OUTPUT); 
  pinMode(31, OUTPUT); 
  pinMode(26, OUTPUT); 
  pinMode(29, OUTPUT); 
  pinMode(9, OUTPUT); 

  // Wavetable variables
  int wavetype = WAVEFORM_ARBITRARY;
  waveform1.begin(wavetype);
  waveform2.begin(wavetype);

  waveform1.amplitude(1);
  waveform2.amplitude(1);

}


void loop() {
  
 
  BotonValue1 = digitalRead(Boton1);   
  BotonValue2 = digitalRead(Boton2); 
  BotonValue3 = digitalRead(Boton3); 
  BotonValue4 = digitalRead(Boton4); 
  GateValue1 = digitalRead(Gate1); 
  GateValue2 = digitalRead(Gate2); 
  EncoderbutValue = digitalRead(Encoderbut); 



  /*Serial.print("Buttons:");
  Serial.print(BotonValue1);
  Serial.print(BotonValue2);
  Serial.print(BotonValue3);
  Serial.print(BotonValue4);
  Serial.print(GateValue1);
  Serial.print(GateValue2);
  Serial.println(EncoderbutValue);
*/

  // read the value from the pots:
  PotValue1 = (float)analogRead(PotPort1) / 1023.0;
  PotValue2 = (float)analogRead(PotPort2) / 1023.0; 
  PotValue3 = (float)analogRead(PotPort3) / 1023.0; 
  PotValue4 = (float)analogRead(PotPort4) / 1023.0;  


  waveform1.frequency(PotValue1*500);
  waveform2.frequency(PotValue2*500);
  

  waveform1.arbitraryWaveform(v_array, 500);
  waveform2.arbitraryWaveform(phi_array, 500);



  Serial.print("Potes:");
  Serial.print(PotValue1);
  Serial.print("\t"); 
  Serial.print(PotValue2);
  Serial.print("\t"); 
  Serial.print(PotValue3);
  Serial.print("\t"); 
  Serial.println(PotValue4);


  
}
